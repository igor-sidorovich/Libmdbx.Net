// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply from: 'versions.gradle'

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:4.1.3"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            def config = android.defaultConfig
            def ext = rootProject.ext
            if (android.compileSdkVersion == null) {
                android.compileSdkVersion ext.compileSdkVersion
            }
            if (config.minSdkVersion == null) {
                config.minSdkVersion ext.minSdkVersion
            }
            if (config.targetSdkVersion == null) {
                config.targetSdkVersion ext.targetSdkVersion
            }
            if (config.versionCode == null) {
                config.versionCode ext.versionCode
            }
            if (config.versionName == null) {
                config.versionName ext.versionName
            }
        }
    }
}

def copyNativeLibsToRoot(buildType) {
    def subproject = project(':android')
    def abis = subproject.android.defaultConfig.externalNativeBuild.cmake.abiFilters

    abis.each { abi ->
        def source = "$subproject.buildDir/intermediates/cmake/$buildType/obj/$abi/libmdbx.so"
        def destination = "$rootProject.buildDir/outputs/lib/$buildType/$abi"

        println "Copying $source to $destination"

        copy {
            from source
            into destination
        }
    }
}

task clean (type: Delete) {
    delete rootProject.buildDir
}

task buildLibMdbxDebug(dependsOn: ':android:externalNativeBuildDebug') {
    doLast {
        copyNativeLibsToRoot('debug')
    }
}

task buildLibMdbxRelease(dependsOn: ':android:externalNativeBuildRelease') {
    doLast {
        copyNativeLibsToRoot('release')
    }
}